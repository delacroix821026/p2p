# spring-boot:run -Drun.arguments=--server.port=3001,--spring.profiles.active=Test
# java -jar target/xxx.jar --server.port=9090 --server.context-path=/Test

---
server:
    port: ${SERVER_PORT:5001}
...

---
eureka:
    client:
        serviceUrl:
            defaultZone: ${EUREKA_SERVER_ADDRESS:http://eurekaserver1:1111/eureka/,http://eurekaserver2:1112/eureka/,http://eurekaserver3:1113/eureka/}
    instance:
        #preferIpAddress: true
        #ip-address: ${spring.cloud.client.ipAddress}
        #instance-id: ${spring.cloud.client.ipAddress}-${server.port}
        hostname: ${HOSTNAME}
        lease-expiration-duration-in-seconds: 40
        lease-renewal-interval-in-seconds: 20
        metadata-map:
            user.name: ${security.user.name}
            user.password: ${security.user.password}
            management.context-path: ${management.context-path}
        metadataMap:
            user: ${security.user.name}
            password: ${security.user.password}
        statusPageUrl: http://${HOSTNAME}:${server.port}/${management.context-path}/info
        healthCheckUrl: http://${HOSTNAME}:${server.port}/${management.context-path}/health
        secure-health-check-url: http://${HOSTNAME}:${server.port}/${management.context-path}/health
...

---
spring:
    application:
        name: "@project.parent.name@"
    cloud:
        config:
            #profile: ${profile}
            label: master
            #uri: http://localhost:2001/
            discovery:
                enabled: true
                serviceId: P2P-CONFIG-SERVER
                #profile: {profile.active}
                #label: master

...

---
management:
    context-path: /manage
security:
    user:
        name: admin
        password: 123456
    basic:
        enabled: true
        path: ${management.context-path}
...